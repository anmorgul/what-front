pipeline {
	agent { label 'nodejs'}
	stages {
		stage("ls") {
			steps {
				sh 'ls'
			}
		}
		// stage('Clone repository') {
		// 	steps {
		// 	  checkout([$class: 'GitSCM', branches: [[name: '*/fakemaster']],
		// 	  doGenerateSubmoduleConfigurations: false, extensions: [],
		// 	  submoduleCfg: [],
		// 	  userRemoteConfigs: [[url: 'https://github.com/anmorgul/what-front.git']]])
		// 	}
		// }
		stage("Stage npm install") {
			steps {
				sh 'npm install'
			}
		}
		stage("Stage eslint + test") {
			parallel {
				stage("Stage eslint") {
					steps {
					catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
						sh 'npx eslint .'
						}
						}
					}
				stage("Stage test") {
					steps {
					catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
						sh 'npm run test'
						}
					}
				}
				}
			}
		stage("Stage build") {
			steps {
				sh 'npm run build'
			}
		}
		// stage("sonar") {
		// 	steps {
		// 		sh 'ls'
		// 		sh '''wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472.zip'''
		// 		sh 'unzip -f sonar-scanner-cli-4.6.2.2472.zip'
		// 		sh 'ls'
		// 		sh '''
		// 		./sonar-scanner-4.6.2.2472/bin/sonar-scanner \
		// 		-Dsonar.projectKey=pk1 \
		// 		-Dsonar.sources=. \
		// 		-Dsonar.host.url=http://192.168.1.128:9000 \
		// 		-Dsonar.login=c888f7168cd9b36349de2ac44912718063162546
		// 		'''
		// 	}
		// }
  	}
}